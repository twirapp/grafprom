services:
  grafana:
    image: portainer/template-swarm-monitoring:grafana-9.5.2
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.databases != true
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-grafana.rule=Host(`grafana.twir.app`)
        - traefik.http.services.twir-grafana.loadbalancer.server.port=3000
        - traefik.docker.network=traefik-public
    volumes:
      - type: volume
        source: grafana-data
        target: /var/lib/grafana
    environment:
    # thats ok, because we'll use cloudflare zero access for protect grafana
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - twir
      - traefik-public
      - monitoring

  prometheus:
    image: twirapp/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--log.level=error'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.databases != true
    volumes:
      - type: volume
        source: prometheus-data 
        target: /prometheus
    networks:
      - twir
      - traefik-public
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.2
    command: -logtostderr -docker_only
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    volumes:
      - type: bind
        source: /
        target: /rootfs
        read_only: true
      - type: bind
        source: /var/run
        target: /var/run
        read_only: true
      - type: bind
        source: /sys
        target: /sys
        read_only: true
      - type: bind
        source: /var/lib/docker
        target: /var/lib/docker
        read_only: true
      - type: bind
        source: /dev/disk
        target: /dev/disk
        read_only: true                        
    networks:
      - monitoring
      - twir

  node-exporter:
    image: prom/node-exporter:v1.8.2
    command:
      - '--path.rootfs=/host'
    hostname: {{.Node.Hostname}}
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - monitoring
      - twir

volumes:
  grafana-data:
  prometheus-data:

networks:
  monitoring:
    external: true
  twir:
    external: true
  traefik-public:
    external: true




